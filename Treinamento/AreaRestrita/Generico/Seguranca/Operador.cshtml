@RenderPage("~/AreaRestrita/Seguranca.cshtml")

@{
    Page.Title = "Operador";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions{

    private enum View
    {
        Index,
        New,
        Edit
    }

    private class Operador
    {
        public string IdOperador { get; set; }
        public string Cpf { get; set; }
        public string Nome { get; set; }

    }

    View view = View.Index;

    string idOperador = null;
    string acao = null;
    string cpf = null;
    string nome = null;
    Operador operador = null;
    List<Operador> operadores = null;
    List<Botao> botoes = null;

    private void AlimentaVariaveis()
    {
        botoes = new BotaoDao().GetAll();
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idOperador = Util.ChecaNulo(Request.Form["idOperador"]);
        nome = Util.ChecaNulo(Request.Form["nome"]);
        cpf = Util.ChecaNulo(Request.Form["cpf"]);
    }

    private void LimpaVariaveis()
    {
        idOperador = null;
        acao = null;
        cpf = null;
        nome = null;
    }

    private string GetNomeProcedure(string acao)
    {
        if (botoes == null) return null;
        Botao btn = botoes.Find(x => x.CodigoAcao == acao);
        return btn != null ? btn.NomeProcedure : null;

    }

    private void Consulta()
    {
        try
        {
            Dictionary<string, object> parametros = new Dictionary<string, object>();
            parametros.Add("@IdOperador", idOperador);

            string procedure = GetNomeProcedure("C");

            operadores = new Dao().ExecutarProcedureList<Operador>(procedure, parametros);

            if (operadores != null && idOperador != null)
            {
                operador = operadores.FirstOrDefault();
            }

        }
        catch (Exception ex)
        {

            ModelState.AddError("alert-danger", ex.Message);
        }
    }

    private void DbManutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@IdOperador", operador.IdOperador);
        parametros.Add("@Cpf", operador.Cpf);
        parametros.Add("@Nome", operador.Nome);

        string procedure = GetNomeProcedure(acao);

        new Dao().ExecutarProcedure(procedure, parametros);

    }

    private void Manutencao()
    {
        try
        {
            operador = new Operador()
            {
                IdOperador = Util.ChecaNulo(Request.Form["idOperador"]),
                Cpf = Util.ChecaNulo(Request.Form["cpf"]),
                Nome = Util.ChecaNulo(Request.Form["nome"]),
            };

            DbManutencao();

            Consulta();

            LimpaVariaveis();

            ModelState.AddError("alert-success", "Operação realizada com sucesso");
        }
        catch (Exception ex)
        {
            ModelState.AddError("alert-danger", ex.Message);
        }
    }

    private void SetView()
    {
        if (operador == null && acao == null)
        {
            view = View.Index;
        }
        else if (acao == "new" || acao == "I")
        {
            view = View.New;

            if (operador == null)
            {
                operador = new Operador();
            }
        }
        else if (operador != null)
        {
            view = View.Edit;
        }

    }

}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        Manutencao();
    }

    if (acao == null || acao == "C")
    {
        Consulta();
    }

    SetView();

}

<body>

    <form name="form1" method="post">

        <input type="hidden" name="acao" value="@acao" />

        @RenderPage("~/AreaRestrita/Menu.cshtml")

    <div class="container">
        @PageHelper.MakeAlert()

        <div class="header mt-3">

            <div class="header-body">

                <div class="row">

                    <div class="col">

                        <h4 class="header-pretitle">
                            @Page.Title
                        </h4>

                    </div>
                </div>

            </div>

        </div>

        <div class="mt-2">

            @if (view == View.Index)
            {
                if (botoes.Any(x => x.CodigoAcao == "I"))
                {
                    @PageHelper.BtnLimpar()
                    <button class="btn btn-secondary" type="button" onclick="executarAcao('I')" onchange="recarregarPagina()">Adicionar novo</button>
                }
            }

        </div>

        @if (view == View.Index)
        {
            <input type="hidden" name="idOperador" id="idOperador" />

            if (operadores != null)
            {
                <table class="table table-borderless mt-3">

                    <thead>
                        <tr>
                            <th scope="col" class="border-start border-end border-bottom border-top">Id</th>
                            <th scope="col" class="border-start border-end border-bottom border-top">Nome</th>
                            <th scope="col" class="border-start border-end border-bottom border-top">Cpf</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (Operador item in operadores)
                        {
                            <tr>
                                <td scope="row" class="border-start border-end border-bottom border-top">@item.IdOperador</td>
                                <td scope="row" class="border-start border-end border-bottom border-top">@item.Nome</td>
                                <td scope="row" class="border-start border-end border-bottom border-top">@item.Cpf</td>
                                <td scope="row" class="border-0">
                                    <button class="btn btn-secondary btn-sm" type="button" onclick="editar(@item.IdOperador)">Editar</button>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            }
        }

        @if (view == View.New || view == View.Edit)
        {
            <input type="hidden" name="idOperador" id="idOperador" value="@operador.IdOperador" />

            <div class="form-col mt-2 w-25">

                <label>Nome</label>
                <input type="text" name="nome" id="idOperador" value="@operador.Nome" class="form-control" />
                <label class="mt-2">CPF</label>
                <input type="text" name="cpf" id="idOperador" value="@operador.Cpf" class="form-control" />

            </div>

            <div class="justify-content-end mx-8 mt-3">
                @if (view == View.New)
                {
                    if (botoes.Any(x => x.CodigoAcao == "I"))
                    {
                        @PageHelper.BtnLimpar()
                        <button class="btn btn-secondary" type="button" onclick="executarAcao('I')" onchange="recarregarPagina()">Incluir</button>
                    }
                }
            </div>

            <div class="justify-content-end mx-8 mt-3">
                @if (view == View.Edit)
                {
                    @PageHelper.MakeBotao(botoes, "A")
                    @PageHelper.MakeBotao(botoes, "E")
                    @PageHelper.BtnLimpar()
                }
            </div>

        }

    </div>

    </form>

    <script src="~/Scripts/Scripts.js"></script>

    <script>

        function editar(idOperador) {
            document.form1.idOperador.value = idOperador;
            document.form1.submit();
        }

        function recarregarPagina() {
            document.form1.action.value = document.form1.action.value;
            document.form1.submit();
        }

    </script>

</body>