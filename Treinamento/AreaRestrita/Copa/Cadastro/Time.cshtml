@RenderPage("~/AreaRestrita/Seguranca.cshtml")

@{
    Page.Title = "Times";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions {

    private enum View
    {
        Index,
        New,
        Edit
    }

    private class Time
    {
        public string IdTime { get; set; }
        public string Nome { get; set; }
    }

    View view = View.Index;

    string acao = null;
    string idTime = null;
    string nome = null;
    Time time = null;
    List<Time> times = null;
    List<Botao> botoes = null;

    private void AlimentaVariaveis()
    {
        botoes = new BotaoDao().GetAll();
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idTime = Util.ChecaNulo(Request.Form["idTime"]);
    }

    private void LimpaVariaveis()
    {
        acao = null;
        idTime = null;
    }

    private string GetNomeProcedure(string acao)
    {
        if (botoes == null) return null;
        Botao btn = botoes.Find(x => x.CodigoAcao == acao);
        return btn != null ? btn.NomeProcedure : null;
    }

    private void Consulta()
    {
        try
        {
            Dictionary<string, object> parametros = new Dictionary<string, object>();
            parametros.Add("@IdTime", idTime);

            string procedure = GetNomeProcedure("C");

            times = new Dao().ExecutarProcedureList<Time>(procedure, parametros);

            if (times != null && idTime != null)
            {
                time = times.FirstOrDefault();
            }
        }
        catch (Exception ex)
        {
            ModelState.AddError("alert-danger", ex.Message);
        }

    }

    private void DbManutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@IdTime", time.IdTime);
        parametros.Add("@Nome", time.Nome);

        string procedure = GetNomeProcedure(acao);

        new Dao().ExecutarProcedure(procedure, parametros);
    }

    private void Manutencao()
    {
        try
        {
            time = new Time()
            {
                IdTime = Util.ChecaNulo(Request.Form["idTIme"]),
                Nome = Util.ChecaNulo(Request.Form["nome"])
            };

            DbManutencao();

            LimpaVariaveis();

            Consulta();

            ModelState.AddError("alert-success", "Operação realizada com sucesso");
        }
        catch (Exception ex)
        {
            ModelState.AddError("alert-danger", ex.Message);
        }
    }

    private void SetView()
    {
        if (acao == "new" || acao == "I")
        {
            view = View.New;

            if (time == null)
            {
                time = new Time();
            }
        }
        else if (time == null)
        {
            view = View.Index;
        }
        else if (time != null)
        {
            view = View.Edit;
        }
    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        Manutencao();
    }

    if (acao == null || acao == "C")
    {
        Consulta();
    }

    SetView();

}

<body>
    <form name="form1" method="post">
        <input type="hidden" name="acao" id="acao" />

        @RenderPage("~/AreaRestrita/Menu.cshtml")

    <div class="container">
        @PageHelper.MakeAlert()

        <div class="header mt-3">
            <div class="header-body">
                <div class="row">
                    <div class="col">
                        <h2 class="header-title">
                            @Page.Title
                        </h2>
                    </div>

                </div>
            </div>
        </div>

        <div class="mt-2">

            @if (view == View.Index)
            {
                if (botoes.Any(x => x.CodigoAcao == "I"))
                {
                    @PageHelper.BtnLimpar()
                    <button class="btn btn-secondary" type="button" onclick="executarAcao('new')">Adicionar novo</button>
                }
            }
        </div>

        @if (view == View.Index)
        {
            <input type="hidden" name="idTime" />

            if (times != null)
            {
                <table class="table table-borderless mt-3">
                    <thead>
                        <tr>
                            <th scope="col" class="border-start border-end border-bottom border-top">Id</th>
                            <th scope="col" class="border-start border-end border-bottom border-top">Nome</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Time item in times)
                        {
                            <tr>
                                <td scope="row" class="border-start border-end border-bottom border-top">@item.IdTime</td>
                                <td scope="row" class="border-start border-end border-bottom border-top">@item.Nome</td>
                                <td scope="row" class="border-0">
                                    @if (botoes.Any(x => x.CodigoAcao == "A" || x.CodigoAcao == "E"))
                                    {
                                        <button class="btn btn-secondary btn-sm" type="button" onclick="editar(@item.IdTime)">Editar</button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }

        @if (view == View.New || view == View.Edit)
        {
            <input type="hidden" name="idTime" id="idTime" value="@time.IdTime" />

            <div class="col-3 mt-2 form-group">
                <input class="form-control" placeholder="Nome" type="text" name="nome" id="nome" value="@time.Nome" />
            </div>

            <div class="justify-content-end mx-8 mt-3">
                @if (view == View.New)
                {
                    @PageHelper.BtnLimpar()
                    @PageHelper.MakeBotao(botoes, "I")
                }
            </div>

            <div class="justify-content-end mx-8 mt-3">
                @if (view == View.Edit)
                {
                    @PageHelper.MakeBotao(botoes, "A")
                    @PageHelper.MakeBotao(botoes, "E")
                    @PageHelper.BtnLimpar()
                }
            </div>
        }

    </div>
    </form>
    <script src="~/Scripts/Scripts.js"></script>
    <script>
        function editar(idTime) {
            document.form1.idTime.value = idTime;
            document.form1.submit();
        }
    </script>
</body>