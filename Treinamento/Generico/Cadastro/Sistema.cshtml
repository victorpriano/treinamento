@{
    Page.Title = "Sistema";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions{
    private enum View
    {
        Index,
        New,
        Edit
    }

    private class Sistema
    {
        public string IdSistema { get; set; }
        public string CodigoSistema { get; set; }
        public string DescricaoSistema { get; set; }
    }

    View view = View.Index;

    string acao = null;
    string idSistema = null;
    string codigoSistema = null;
    string descricaoSistema = null;
    Sistema sistema = null;
    List<Sistema> sistemas = null;

    private void AlimentaVariaveis()
    {
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idSistema = Util.ChecaNulo(Request.Form["idSistema"]);
        codigoSistema = Util.ChecaNulo(Request.Form["codigoSistema"]);
        descricaoSistema = Util.ChecaNulo(Request.Form["descricaoSistema"]);
    }

    private void LimpaVariaveis()
    {
        acao = null;
        idSistema = null;
        codigoSistema = null;
        descricaoSistema = null;
    }

    private string GetNomeProcedure(string acao)
    {
        switch (acao)
        {
            case "C": return "stp_Sys_Sistema_Sel";
            case "I": return "stp_Sys_Sistema_Ins";
            case "A": return "stp_Sys_Sistema_Upd";
            case "E": return "stp_Sys_Sistema_Del";

            default: return null;
        }
    }

    private void Consulta()
    {
        try
        {
            Dictionary<string, object> parametros = new Dictionary<string, object>();
            parametros.Add("IdSistema", idSistema);

            string procedure = GetNomeProcedure("C");

            sistemas = new Dao().ExecutarProcedureList<Sistema>(procedure, parametros);

            if (sistemas != null && idSistema != null)
            {
                sistema = sistemas.FirstOrDefault();
            }

        }
        catch (Exception ex)
        {

            ModelState.AddError("alert-danger", ex.Message);
        }
    }

    private void DbManutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("IdSistema", sistema.IdSistema);
        parametros.Add("CodigoSistema", sistema.CodigoSistema);
        parametros.Add("DescricaoSistema", sistema.DescricaoSistema);

        string procedure = GetNomeProcedure(acao);

        new Dao().ExecutarProcedure(procedure, parametros);
    }

    private void Manutencao()
    {
        try
        {
            sistema = new Sistema()
            {
                IdSistema = Util.ChecaNulo(Request.Form["idSistema"]),
                CodigoSistema = Util.ChecaNulo(Request.Form["codigoSistema"]),
                DescricaoSistema = Util.ChecaNulo(Request.Form["descricaoSistema"])
            };

            DbManutencao();


            Consulta();
            
            LimpaVariaveis();

            ModelState.AddError("alert-success", "Operação realizada com sucesso");
            
        }
        catch (Exception ex)
        {

            ModelState.AddError("alert-danger", ex.Message);
        }
    }

    private void SetView()
    {
        if (acao == "new" || acao == "I")
        {
            view = View.New;

            if (sistema == null)
            {
                sistema = new Sistema();
            }
        }
        else if(sistema == null)
        {
            view = View.Index;
        }
        else if(sistema != null)
        {
            view = View.Edit;
        }
    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        Manutencao();

    }

    if (acao == null || acao == "C")
    {
        Consulta();
    }

    SetView();
}

@section head {
    <link href="~/Scripts/Style.css" rel="stylesheet">
    <link href="~/Estilo/Bootstrap.cshtml" rel="stylesheet">
}

<body>
    <form name="form1" method="post">

        <input type="hidden" name="acao" id="acao" />

        @RenderPage("~/AreaRestrita/Menu.cshtml")

    <div class="container">
        @PageHelper.MakeAlert()

        <div class="header mt-md-5">

            <div class="header-body">

                <div class="row m-xxl-5">

                    <div class="col">

                        <h4 class="header-pretitle mt-4">
                            @Page.Title
                        </h4>

                    </div>

                    <div class="col mx-md-4">

                        @if (view == View.Index)
                        {
                            <button class="btn btn-secondary" type="button" onclick="executarAcao('new')">Incluir</button>
                        }

                        @if (view == View.New)
                        {
                            <button class="btn btn-secondary" type="button" onclick="executarAcao('I')">Incluir</button>
                        }
                        
                        @if (view == View.Edit)
                        {
                            <button class="btn btn-secondary" type="button" onclick="executarAcao('A')">Alterar</button>
                            <button class="btn btn-secondary" type="button" onclick="executarAcao('E')">Excluir</button>
                        }
                        <button class="btn btn-terciary" type="button" onclick="estadoInicial()">Limpar</button>

                    </div>

                </div>

            </div>

        </div>

        @if (view == View.Index)
        {
            <input type="hidden" name="idSistema"/>

            if(sistemas != null)
            { 
                <table class="table table-bordered border-0">

                    <thead>
                        <tr>
                            <th scope="col">Id</th>
                            <th scope="col">Código</th>
                            <th scope="col">Descrição</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (Sistema item in sistemas)
                        {
                            <tr>
                                <td scope="row">@item.IdSistema</td>
                                <td scope="row">@item.CodigoSistema</td>
                                <td scope="row">@item.DescricaoSistema</td>
                                <td scope="row" class="border-0">
                                    <button class="btn btn-secondary btn-sm" type="button" onclick="editar(@item.IdSistema)">Editar</button>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            }
        }

        @if(view == View.New || view == View.Edit)
        { 
            <input type="hidden" name="idSistema" id="idSistema" value="@sistema.IdSistema" />
            
            <label>Código</label>
            <input type="text" name="codigoSistema" id="idSistema" value="@sistema.CodigoSistema" />
            <label>Descrição</label>
            <input type="text" name="descricaoSistema" id="idSistema" value="@sistema.DescricaoSistema" />                
        }

    </div>
    </form>

    <script src="~/Scripts/Scripts.js"></script>

    <script>
        editar = (idSistema) => {
            document.form1.idSistema.value = idSistema;
            document.form1.submit();
        }
    </script>
</body>

